name: Build & Publish DMGs via Spec

on:
  push:
    tags:
      - '*.*.*'
jobs:
  build:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [arm64, x86_64]

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Install Rosetta (for Intel)
        if: matrix.arch == 'x86_64'
        run: |
          softwareupdate --install-rosetta --agree-to-license

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          # ensure we get the correct build for each arch
          architecture: ${{ matrix.arch == 'x86_64' && 'x64' || 'arm64' }}

      - name: Create & activate venv
        run: |
          # give each arch its own venv directory
          python -m venv .venv-${{ matrix.arch }}
          source .venv-${{ matrix.arch }}/bin/activate

      # ───────────────────────────────────────────────────────────
      # NEW STEP: build in a clean subdirectory so there’s no
      # “numpy/” folder shadowing the installed package
      - name: Copy source out of numpy namespace
        run: |
          mkdir build
          rsync -a --exclude .git --exclude .venv ./ build/src
      - name: Install dependencies in build area
        working-directory: build/src
        run: |
          source $GITHUB_WORKSPACE/.venv-${{ matrix.arch }}/bin/activate
          pip install -r requirements.txt pyinstaller
      - name: Build with PyInstaller spec
        working-directory: build/src
        run: |
          source .venv-${{ matrix.arch }}/bin/activate
          if [ "${{ matrix.arch }}" = "x86_64" ]; then
            arch -x86_64 pyinstaller --clean ACN.spec
          else
            pyinstaller --clean ACN.spec
          fi

      - name: Package into DMG
        working-directory: build/src
        run: |
          source $GITHUB_WORKSPACE/.venv-${{ matrix.arch }}/bin/activate
          DMG_NAME="ACN-Backtester-${{ matrix.arch }}.dmg"
          if [ "${{ matrix.arch }}" = "x86_64" ]; then
            arch -x86_64 hdiutil create -volname "ACN Backtester" \
              -srcfolder "dist/ACN Backtester.app" -ov -format UDZO "${DMG_NAME}"
          else
            hdiutil create -volname "ACN Backtester" \
              -srcfolder "dist/ACN Backtester.app" -ov -format UDZO "${DMG_NAME}"
          fi
          mv *.dmg $GITHUB_WORKSPACE

      - name: Publish Release assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ACN-Backtester-arm64.dmg
            ACN-Backtester-x86_64.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}